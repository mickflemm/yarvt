#!/bin/bash

# Initialize /dev and mount /proc and /sys
mount -t devtmpfs none /dev
mkdir /dev/pts
mount -t devpts devpts /dev/pts
mount -t proc -o nodev,noexec,nosuid proc /proc
mount -t sysfs -o nodev,noexec,nosuid sysfs /sys

# Populate the remaining stuff for rootfs
mkdir /tmp
mkdir -p /var/log
touch /var/log/wtmp
mkdir -p /var/run
touch /var/run/utmp
mkdir /etc/dropbear
touch /var/log/messages

# Make sure /dev/console exists
mknod -m 622 /dev/console c 5 1 &> /dev/null

# Create the root user with a default password of "riscv"
# and the root group with an empty password
echo "root:\$5\$H2cul7fEFgcApal5\$EA0DmjYXIJ8UWS.mnRC3rF4F2UXUpA3KsAhF/.m/eq.:0:0:99999:7:::" > /etc/shadow
chmod go-rw /etc/shadow
echo "root:x:0:0:System administrator,,,:/root:/bin/bash" > /etc/passwd
chmod go-w /etc/passwd
echo "/bin/bash" > /etc/shells
echo "root:x:0:" > /etc/group
echo "root:*::" > /etc/gshadow
chmod go-rw /etc/gshadow

# Start syslogd
syslogd -C1024

# Start mdev
/sbin/mdev -d &> /dev/null

# Initialize loopback interface
ip link set lo up &> /dev/null
ip addr add 127.0.0.1 dev lo &> /dev/null
ip route add 127.0.0.0/255.0.0.0 dev lo &> /dev/null

# Grab some parameters from kernel's cmdline
SINGLE=0
CMDLINE=$(xargs -n1 -a /proc/cmdline)
for arg in ${CMDLINE}; do
	case "${arg}" in
		systemd.hostname=*)
			hostname "${arg#systemd.hostname=}"
			;;
		rescue)
			SINGLE=1
			;;
	esac
done

# Update motd
echo "$(uname -s -v -r -p -m)" >> /etc/motd

# Disable kernel log output on console
dmesg -n1

# Print a greeting
echo -e "\n\n\t\tWelcome to RISC-V !" > /dev/console
echo -e "\t\t--===============--" > /dev/console
if [[ ${SINGLE} -eq 0 ]]; then
	echo -e "Use root/riscv to login" > /dev/console
else
	cat /etc/motd > /dev/console
fi

# Initialize networking and start DHCP and
# the ssh server if available
ip link show eth0 | grep eth0 &> /dev/null
if [[ $? == 0 ]]; then
	# Check if we already have an IP address due to
	# kernel-level autoconfiguration
	ip addr show dev eth0 | grep "inet " &> /dev/null
	if [[ $? != 0 ]]; then
		# If not bring up the interface and fire up
		# the DHCP client
		ip link set eth0 up &> /dev/null
		udhcpc -b -S -R &> /dev/null &
	fi
	dropbear -R -m -b /etc/motd &
	mkdir -p /usr/bin
	ln -s /bin/dropbearmulti /usr/bin/dbclient
	ntpd &
	echo "You may login remotely through ssh over network or" > /dev/console
	if [[ ${SINGLE} -eq 0 ]]; then
		echo "your host's port 2222 (in case of QEMU)" > /dev/console
	else
		echo "your host's port 2222 (in case of QEMU) using root/riscv" > /dev/console
	fi
fi

# Get console
export PS1="${USER}@\$(hostname): \${PWD} $ "
if [[ ${SINGLE} -eq 0 ]]; then
	touch .hushlogin
	exec setsid cttyhack bash -c "while true; do /bin/login -p; done"
else
	exec setsid cttyhack bash -c "while true; do /bin/bash; done"
fi
